generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) @db.Uuid
  email       String    @unique
  first_name  String?
  last_name   String?
  avatar      String?
  password    String
  role_id     String?   @db.Uuid
  role        Role?     @relation(fields: [role_id], references: [id], onDelete: SetNull)
  auctions    Auction[]
  bids        Bid[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Role {
  id          String       @id @default(uuid()) @db.Uuid
  name        String       @unique
  users       User[]
  permissions Permission[] // implicitni M-to-M, Prisma naredi join tabelo sam
}

model Permission {
  id    String @id @default(uuid()) @db.Uuid
  name  String @unique
  roles Role[] 
}

model Auction {
  id           String    @id @default(uuid()) @db.Uuid
  title        String
  description  String
  image        String
  startingBid  Float
  endTime      DateTime
  userId       String    @db.Uuid
  user         User      @relation(fields: [userId], references: [id])
  bids         Bid[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Bid {
  id          String    @id @default(uuid()) @db.Uuid
  amount      Float
  maxAmount   Float?
  userId      String    @db.Uuid
  auctionId   String    @db.Uuid
  user        User      @relation(fields: [userId], references: [id])
  auction     Auction   @relation(fields: [auctionId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
